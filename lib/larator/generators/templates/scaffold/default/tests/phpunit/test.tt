<?php

use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class <%= model_class_name %>Test extends TestCase
{
    use WithoutMiddleware;

    public function testGetIndex()
    {
        $response = $this->call('GET', '/<%= singular_table_name %>');
        $this->assertEquals(200, $response->getStatusCode());
    }

    public function testGetCreate()
    {
        $response = $this->call('GET', '/<%= singular_table_name %>/create');
        $this->assertEquals(200, $response->getStatusCode());
    }

    public function testPostStore()
    {
        $response = $this->call('POST', '/<%= singular_table_name %>', []);
        $this->assertEquals(302, $response->getStatusCode());
    }

    public function testGetShow()
    {
        $<%= singular_table_name %> = factory(App\<%= model_class_name %>::class)->create();
        $response = $this->call('GET', "/<%= singular_table_name %>/{$<%= singular_table_name %>->id}");
        $this->assertEquals(200, $response->getStatusCode());
    }

    public function testGetEdit()
    {
        $<%= singular_table_name %> = factory(App\<%= model_class_name %>::class)->create();
        $response = $this->call('GET', "/<%= singular_table_name %>/{$<%= singular_table_name %>->id}/edit");
        $this->assertEquals(200, $response->getStatusCode());
    }

    public function testPutUpdate()
    {
        $<%= singular_table_name %> = factory(App\<%= model_class_name %>::class)->create();
        $response = $this->call('PUT', "/<%= singular_table_name %>/{$<%= singular_table_name %>->id}", []);
        $this->assertEquals(302, $response->getStatusCode());
    }

    public function testDeleteDestroy()
    {
        $<%= singular_table_name %> = factory(App\<%= model_class_name %>::class)->create();
        $response = $this->call('DELETE', "/<%= singular_table_name %>/{$<%= singular_table_name %>->id}");
        $this->assertRedirectedToRoute('<%= singular_table_name %>.index');
    }
}
